// <auto-generated />
using DocumentVersionManager.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DocumentVersionManager.Infrastructure.Migrations
{
    [DbContext(typeof(DocumentVersionManagerContext))]
    partial class DocumentVersionManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.DocumentType", b =>
                {
                    b.Property<string>("TypeName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("TypeName");

                    b.ToTable("DocumentType");

                    b.HasData(
                        new
                        {
                            TypeName = "Cabling"
                        },
                        new
                        {
                            TypeName = "Chroming"
                        },
                        new
                        {
                            TypeName = "Sealing"
                        },
                        new
                        {
                            TypeName = "Gauging"
                        },
                        new
                        {
                            TypeName = "Wiring"
                        });
                });

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.HigherModel", b =>
                {
                    b.Property<string>("HigherModelName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("HigherModelDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Id")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("HigherModelName");

                    b.ToTable("HigherModel");

                    b.HasData(
                        new
                        {
                            HigherModelName = "HigherModel1",
                            Capacity = 1,
                            HigherModelDescription = "HigherModel1",
                            Id = "661e263b-f5b5-4458-86ec-4468b9e24d98",
                            ProductId = "HigherModel1"
                        },
                        new
                        {
                            HigherModelName = "HigherModel2",
                            Capacity = 12,
                            HigherModelDescription = "HigherModel12",
                            Id = "12532b43-bd99-42d8-aca0-153f27b68807",
                            ProductId = "HigherModel12"
                        },
                        new
                        {
                            HigherModelName = "HigherModel3",
                            Capacity = 13,
                            HigherModelDescription = "HigherModel1",
                            Id = "c85835c5-d4eb-48dd-8f09-a0aeb7c50407",
                            ProductId = "HigherModel13"
                        },
                        new
                        {
                            HigherModelName = "HigherModel4",
                            Capacity = 14,
                            HigherModelDescription = "HigherModel14",
                            Id = "23d0efc7-cc86-4a1e-ad60-759bca831151",
                            ProductId = "HigherModel14"
                        },
                        new
                        {
                            HigherModelName = "HigherModel5",
                            Capacity = 5,
                            HigherModelDescription = "HigherModel5",
                            Id = "b1a1f3ba-f977-401c-b2d1-5ab350f40fe1",
                            ProductId = "HigherModel5"
                        });
                });

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.Model", b =>
                {
                    b.Property<string>("ModelId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ModelTypesId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ModelId");

                    b.HasIndex("ModelTypesId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            ModelId = "FIRSTMODELID1",
                            ModelName = "FIRSTMODELNAME1",
                            ModelTypesId = "FIRSTMODELTYPEID"
                        },
                        new
                        {
                            ModelId = "FIRSTMODELID2",
                            ModelName = "FIRSTMODELNAME2",
                            ModelTypesId = "FIRSTMODELTYPEID"
                        },
                        new
                        {
                            ModelId = "FIRSTMODELID3",
                            ModelName = "FIRSTMODELNAME2",
                            ModelTypesId = "FIRSTMODELTYPEID"
                        },
                        new
                        {
                            ModelId = "SECONDMODELID1",
                            ModelName = "SECONDMODELNAME1",
                            ModelTypesId = "SECONDMODELTYPEID"
                        },
                        new
                        {
                            ModelId = "THIRDMODELD1",
                            ModelName = "THIRDMODELNAME1",
                            ModelTypesId = "THIRDMODELTYPEID"
                        });
                });

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.ModelTypes", b =>
                {
                    b.Property<string>("ModelTypeId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ModelTypeName")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.HasKey("ModelTypeId");

                    b.ToTable("ModelType");

                    b.HasData(
                        new
                        {
                            ModelTypeId = "FIRSTMODELTYPEID",
                            ModelTypeName = "FIRSTMODELTYPE"
                        },
                        new
                        {
                            ModelTypeId = "SECONDMODELTYPEID",
                            ModelTypeName = "SECONDMODELTYPE"
                        },
                        new
                        {
                            ModelTypeId = "THIRDMODELTYPEID",
                            ModelTypeName = "THIRDMODELTYPE"
                        });
                });

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.Model", b =>
                {
                    b.HasOne("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.ModelTypes", "ModelTypes")
                        .WithMany("Models")
                        .HasForeignKey("ModelTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModelTypes");
                });

            modelBuilder.Entity("DocumentVersionManager.Domain.ModelAggregateRoot.Entities.ModelTypes", b =>
                {
                    b.Navigation("Models");
                });
#pragma warning restore 612, 618
        }
    }
}
